---
title: Lets Hash This Out: Data Structures
date: 2016-11-07
categories:
tags:
---

To successfully create this blog, I have been backtracking my experience through my Iron Yard journal and sharing the knowledge therein. So far so good, right? No difficulties during my training, no awkward moments or tough spots, just smooth sailing for 12 weeks... Well, not quite. I've been honest before in mentioning my moments of weakness and allowing imposter syndrome to settle in every now and again. However, these were not the only trials I faced during those 12 weeks of intense code creation.

I'll begin this lesson with the importance of communication. As an effective educator, communication, both written and verbal, is more than a necessary skill it is required. My powers of public speaking did not stop in the classroom however, no, I utilize this skill in every aspect of my life to help ensure that my words carry out there intended meaning. Yet at this moment, I find myself in a place of irony as I try to construct this entry and words are escaping me. Well, you know what they say: communication is key, and it truly does lead to the greatest chance of success when people actively try to communicate. Onward!

During my training at The Iron Yard, both front end and back end developers would be paired up for group projects to be completed over the span of a few days rather than a typical nightly assignment. My first group project was a rather difficult time for me; for it was at that time my grandmother found her place with God. Fortunately, The Iron Yard staff was more than supportive in constructing a team that could work with me as I worked remotely. My team and I communicated most of the assignment details prior to my absence and nearly completed the assignment before it had truly begun. The most challenging part of this assignment was my inability to work side by side with my front end development team. I tend to communicate ideas that which I am new to better when I have visuals to reference. Through this experience, I learned how to overcome the challenges of remote work by utilizing tools, such as Trello and slack, to manage our groups workflow and provide frequent updates to all group members simultaneously.

My second group project is one that I shall never forget. Our group synergy and constant communication in updating each other on our individual progress via Trello and slack messages was unmatched. The biggest 'problem' our group ran into was working with Rails for the first time ever! And yes, before you ask, by we I meant myself as the sole back end developer and my two wonderful front end developers, WE ALL worked in Rails! At first my team was insecure about working in an environment and downloading other software that they would not regularly use, but then they immediately took to Rails' flexibility and ease of use. They even started looking up gems and learning more back end related material which helped our development immensely and added more to our conversations. We were actually the first group to implement our development process entirely through Rails. And soon, my group became the go to, as we began to encourage and assist others in completing their development within Rails as well. The overall experience I gained through this assignment made me level up as a developer. Not only did I challenge my front end team to try something completely new, but they were willing to work with me and allow me to assist them in creating the files and folders they needed for their development. What an inspirational experience I had with this group, I could not wait for the next group challenge to begin.

The next group assignment was a bit open ended. We were allowed to create anything we wanted so long as I used an API and my front end team used Angular. The greatest challenge I faced with this group... you guessed it, communication. At first we seemed to be on the same page. We agreed to utilize the same communication tools that which we have all used in the past, however, my new team mates were not too fond of utilizing slack and were also not open to alternative methods of communicating, so in the end, we stuck with slack anyway. I noticed more and more during our group discussions that disagreements and uncertainty were common, and in an effort to bring us together I compromised with them a lot, which might have been my first big mistake. So after a day of discussing what to create, juggling ideas, and being indecisive, we finally came up with a design idea and features to begin development. I completed my first API by the days end providing my front end team with all of the necessary endpoints they would need to assist in their production. But before I turned in, I inquired of them their progress since there had been little communication from them throughout the day. They were vague in their answers, but overall optimistic. I did not get to see any of their work, but I trusted them and they trusted me. I thought to myself, *Wow, this is going GREAT!* Ignorance is bliss...

You see, communication is a two way street if only one side of the road is open to communicating, traffic slows and production becomes well, less productive. Keeping an open mind and an open line of communication is important when working with others. I realized all too late that my over-willingness to comply with my front end teams every demand was not helping me nor them. However, as inexperienced as I was in API development, and with each new request from my front end team being entirely different from the last, I ran `rails new` again and again. I completed at least 5 different versions of our API from super secure token based to completely insecure open data. As Linkin Park would say, "I tried so hard and got so far, but in the end" I never saw the result of our groups front end design. I was baffled by our teams dysfunctional relationship and I only wish we could have communicated better. I learned the valuable lesson of speaking up for myself and making sure my voice was truly heard through this group project. Although I was the main communicator, my eagerness to comply and complete their every demand did not support our teams productive development. Teamwork makes the dreamwork, but only if all members of the team actively participate and communicate!

Now is about a good a time as ever to get to the real important matter here: data structures. Data structures Qualities of Data Structures, Arrays, Hashes, etc.

Wrap up by mentioning how data structures communicate messages throughout a program and problems may arise, but finding a positive outlet to manage these situations ...something along those lines...

Next issue... While, Until, For, Each, Loops
